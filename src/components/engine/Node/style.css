.node {
  --size: 3rem;
  --icon-size: 1.5rem;

  width: var(--size);
  height: var(--size);
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: calc(var(--icon-size) / 2);
  cursor: pointer;
}

.node.active,
.node:hover {
  border-color: var(--color-white);
}

.node-background {
  position: absolute;
  width: 100%;
  height: 100%;
  color: inherit;
  background: currentColor;
  opacity: 0.6;
  border-radius: calc(var(--icon-size) / 2 - 0.25rem);
}

.node.active > .node-background,
.node:hover > .node-background {
  opacity: 1;
}

.node:active {
  scale: 0.5;
}

.node-icon-container {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  z-index: 1;
}

.node-icon {
  width: var(--icon-size);
  height: var(--icon-size);
}

.node-name {
  position: absolute;
  bottom: calc(100% + 1rem);
  left: 50%;
  transform: translateX(-50%);
  padding: 0.25rem 1rem;
  background-color: var(--color-white);
  color: var(--color-black);
  border-radius: 0.5rem;
  font-size: 0.75rem;
  opacity: 0;
  translate: 0 0.5rem;
  text-wrap: nowrap;
  pointer-events: none;
}

.node:hover > .node-name {
  opacity: 1;
  translate: 0;
}

.node-pointer {
  position: absolute;
  width: 1rem;
  height: 1rem;
  display: flex;
  align-items: center;
  justify-content: center;
  left: calc(100% + 1.5rem);
  top: 50%;
  transform: translate(-50%, -50%);
  pointer-events: none;
}

.node-pointer > * {
  width: 100%;
  height: 100%;
}

.node-wrapper {
  position: relative;
  width: var(--size);
  height: var(--size);
}

.node-context {
  position: absolute;
  top: calc(100% + 1.5rem);
  left: 50%;
  padding: 1rem;
  cursor: default;
  display: grid;
  grid-template-columns: repeat(5, 3.5rem);
  gap: 0.5rem;
  transform: translateX(-50%) translateY(-50%) scale(0);
  opacity: 0;
  pointer-events: none;
  z-index: 100;
}

.node.active + .node-context {
  transform: translateX(-50%) translateY(0%) scale(1);
  opacity: 1;
  pointer-events: auto;
}

.node-context.left {
  left: calc(100% + 2rem);
  top: 50%;
}

.node.active + .node-context.left {
  transform: translateX(0%) translateY(-50%) scale(1);
}

.node-base-input {
  grid-column: 1 / -1;
  padding: 0.5rem 0.25rem;
}

.node-base-input input {
  width: 100%;
}

.node-base-input input::placeholder {
  color: #ffffff66;
}

